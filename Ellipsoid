import java.text.DecimalFormat;

/**
 * This is for Ellipsoid project.
 */
  
public class Ellipsoid {

   //Fields
 
   private String label;
   private double a;
   private double b;
   private double c;

    
    
    /** 
     * Constructor.
     *@param labelIn for label.
     *@param aIn for a axes.
     *@param bIn for b axes.
     *@param cIn for c axes.
     */
    
   public Ellipsoid(String labelIn, double aIn, double bIn, double cIn) {
    
     
      setLabel(labelIn);
      setA(aIn);
      setB(bIn);
      setC(cIn);
    
   }

    //Methods
    /** Sets the label.
      * @return String
     */

   public String getLabel() {
     
      return label;
     
   }

    /**
      * Retrives and sets label.
      * @param labelIn this retrieves a label.
      * @return boolean if label is not null.
      * return true.
     */

   public boolean setLabel(String labelIn) {
      
      
      if (labelIn == null) {
       
         return false; 
      }
      else {
         
         label = labelIn.trim();
         return true;
         
        
         
      } 
         
      
      
   
   }
   
   /**
     * Returns A.
     * @return getA
     */
     
   public double getA() {
      return a;
   }

   /**
     * Sets A.
     * @param aIn this returns a boolean.
     * @return setA
     */
 
   public boolean setA(double aIn) {
   
      if (aIn > 0) {
      
         a = aIn;
         return true;
      }
      
      else {
         return false;
      }
   }

   /**
     * Returns B.
     * @return getB
    */
    
   public double getB() {
      return b;
   }
   
   /**
     * Sets B.
     * @param bIn this returms a boolean.
     * @return setB
     */
     
   public boolean setB(double bIn) {
   
      if (bIn > 0) {
      
         b = bIn;
         return true;
      }
      
      else {
         return false;
      }
   }

  /**
    * Returns C.
    * @return getC
    */
   public double getC() {
      return c;
   }
   
   /**
     * Sets C.
     * @param cIn this returna a boolean.
     * @return setC
     */
   public boolean setC(double cIn) {
   
      if (cIn > 0)
      {
         c = cIn;
         return true;
      }
      
      else {
         return false;
      }
   }

    /**
      * Volume Math.
      * @return volume
      */
   public double volume() {
   
      double volume = ((4 * Math.PI * a * b * c) / 3);
      return volume;
   }
   
    /**
      * Surface Area math.
      * @return surfaceArea
      */
      
   public double surfaceArea() {
   
      double thePowers = (Math.pow((a * b), 1.6) + Math.pow((a * c), 1.6)
         + Math.pow((b * c), 1.6)) / 3;
      double surfaceArea = 4 * Math.PI * Math.pow(thePowers, (1.0 / 1.6));
      return surfaceArea;
   }
 
   /**
     * Returns the string method.
     * @return toString
     */
    
   public String toString() {
      
      DecimalFormat df = new DecimalFormat("#,##0.0###");
      
      String result = "Ellipsoid \"" + getLabel() + "\" with axes a = "
         + df.format(a)
         + ", b = " + df.format(b)
         + ", c = " + df.format(c)
         + " units has:\n\tvolume = " + df.format(volume())
         + " cubic units"
         + "\n\tsurface area = " + df.format(surfaceArea())
         + " square units";
         
      return result;
         
   }
}
